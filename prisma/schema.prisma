generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guild {
  id                 String              @id @db.VarChar(255)
  name               String?             @db.VarChar(255)
  ownerId            String?             @db.VarChar(255)
  memberCount        Int?
  joinedTimestamp    BigInt?
  maximumMembers     Int?
  preferredLocale    String?             @db.VarChar(255)
  members            Member[]
  roles              Role[]
  notificationConfig NotificationConfig?
  welcomeConfig      WelcomeConfig?
  preventConfig      PreventConfig?
}

model Member {
  id             String       @id @db.VarChar(255)
  username       String       @db.VarChar(255)
  stickyUsername String       @db.VarChar(255)
  discriminator  String       @db.VarChar(255)
  guildId        String       @db.VarChar(255)
  guild          Guild        @relation(fields: [guildId], references: [id], onDelete: Cascade)
}

model Role {
  id      String       @id @db.VarChar(255)
  name    String       @db.VarChar(255)
  guildId String       @db.VarChar(255)
  guild   Guild        @relation(fields: [guildId], references: [id], onDelete: Cascade)
}

model User {
  id            String   @id @db.VarChar(255)
  bot           Boolean  @default(false)
  username      String?  @db.VarChar(255)
  discriminator String?  @db.VarChar(255)
  clientAdmin   Boolean? @default(false)
}

model NotificationConfig {
  guildId String  @unique @db.VarChar(255)
  guild   Guild   @relation(fields: [guildId], references: [id], onDelete: Cascade)
  channel String? @db.VarChar(255)
  enabled Boolean @default(false)
}

model WelcomeConfig {
  guildId String  @unique @db.VarChar(255)
  guild   Guild   @relation(fields: [guildId], references: [id], onDelete: Cascade)
  role    String? @db.VarChar(255)
  channel String? @db.VarChar(255)
  message String? @db.VarChar(255)
  enabled Boolean @default(false)
}

model PreventConfig {
  guildId String  @unique @db.VarChar(255)
  guild   Guild   @relation(fields: [guildId], references: [id], onDelete: Cascade)
  role    String? @db.VarChar(255)
  links   Boolean @default(false)
  spam    Boolean @default(false)
  ads     Boolean @default(false)
  enabled Boolean @default(false)
}
